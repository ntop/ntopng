FUZZ_TARGETS := fuzz/fuzz_dissect_packet

FUZZ_LOCAL_TEST := @FUZZ_LOCAL_TEST@
HAS_FUZZLDFLAGS := @HAS_FUZZLDFLAGS@
LIB_FUZZING_ENGINE := @LIB_FUZZING_ENGINE@
FUZZ_OBJECTS := @FUZZ_OBJECTS@
FUZZ_WITH_PROTOBUF := @FUZZ_WITH_PROTOBUF@

OBJECTS := $(OBJECTS) $(FUZZ_OBJECTS)
FUZZ_FILTER_OUT := $(FUZZ_OBJECTS:fuzz/stub/%Stub.o=src/%.o)
OBJECTS_NO_MAIN := $(filter-out src/main.o $(FUZZ_FILTER_OUT),$(OBJECTS))

ifneq ($(HAS_FUZZLDFLAGS),1)
	CPPFLAGS := $(CPPFLAGS) -DINCLUDE_ONEFILE
else ifeq ($(FUZZ_LOCAL_TEST),1)
	CPPFLAGS := $(CPPFLAGS) -DINCLUDE_ONEFILE
endif

EXTRA_SOURCES :=
ifeq ($(FUZZ_WITH_PROTOBUF),1)
	EXTRA_SOURCES := fuzz/proto/pcap.pb.o
	LIBS := $(LIBS) /usr/local/lib/libprotobuf-mutator-libfuzzer.a /usr/local/lib/libprotobuf-mutator.a -lprotobuf
	CPPFLAGS := $(CPPFLAGS) -I/usr/local/include/libprotobuf-mutator -DFUZZ_WITH_PROTOBUF
endif

fuzz/proto/%.pb.o: fuzz/%.proto
	mkdir fuzz/proto
	cd fuzz && protoc --cpp_out=proto/ $*.proto
	$(CXX) -c fuzz/proto/$*.pb.cc -o $@

fuzz/%.o: fuzz/%.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

fuzz/fuzz_dissect_packet: fuzz/fuzz_dissect_packet.o $(EXTRA_SOURCES) $(OBJECTS_NO_MAIN)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) $(LIB_FUZZING_ENGINE) $^ $(LIBS) -o $@

fuzz/%: fuzz/%.o $(OBJECTS_NO_MAIN)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) $(LIB_FUZZING_ENGINE) $^ $(LIBS) -o $@

fuzz_all: $(LIB_TARGETS) $(FUZZ_TARGETS)

--
-- (C) 2020-23 - ntop.org
--

local vs_module = {}

package.path = dirs.installdir .. "/scripts/lua/modules/vulnerability_scan/?.lua;" .. package.path
local vs_utils = require("vs_utils")

-- ##############################################

function vs_module:new()
   local obj = { name = "tcp_portscan" }

   setmetatable(obj, self)
   self.__index = self

   return obj
end

-- ##############################################

function vs_module:is_enabled()
   return(vs_utils.is_nmap_installed())
end


-- ##############################################

-- NOTE: ports are comma separated (e.g. 80,443)

function vs_module:scan_host(host_ip, ports)
   local command = "nmap" -- Use -F for fast scan
   local scan_command
   
   -- IPv6 check
   if(string.contains(host_ip, ':')) then command = command .. " -6 " end
   
   scan_command = string.format("%s %s", command, host_ip)  

   -- io.write("[TCP] "..scan_command.."\n")
   
   local begin_epoch = os.time()
   local result
   
   if ntop.isWindows() then
      local handle = io.popen(scan_command)
      result = handle:read("*a")
      handle:close()
   else
      result = ntop.execCmd(scan_command)
   end
   
   local duration = os.time() - begin_epoch
   local scan_ok = true
   local num_open_ports
   local num_vulnerabilities_found
   local cve
   local tcp_ports
   local udp_ports
   
   result, num_open_ports, num_vulnerabilities_found, cve, udp_ports, tcp_ports = vs_utils.cleanup_nmap_result(result, self.name)
   
   return begin_epoch, result, duration, scan_ok, num_open_ports, num_vulnerabilities_found, cve, udp_ports, tcp_ports
end

-- ##############################################

return vs_module

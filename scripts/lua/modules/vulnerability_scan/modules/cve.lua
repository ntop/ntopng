--
-- (C) 2020-23 - ntop.org
--

local vs_module = {}

package.path = dirs.installdir .. "/scripts/lua/modules/vulnerability_scan/?.lua;" .. package.path
local vs_utils = require("vs_utils")

-- ##############################################

function vs_module:new()
   local obj = { name = "cve" }

   setmetatable(obj, self)
   self.__index = self

   return obj
end

-- ##############################################

function vs_module:is_enabled()
   return(vs_utils.is_nmap_installed())
end

-- ##############################################

-- NOTE: ports are comma separated (e.g 80,443)

function vs_module:scan_host(host_ip, ports)
   local command
   local scan_ports
   local scan_command

   if(true) then
      command = "nmap -sV "
   else
      -- Will be supported when we'll be able to use UDP ports in configuration
      if(ntop.isLinux()) then
	 -- Enabled (previleged) UDP scan on Linux
	 command = "nmap --privileged -sT -sU "
      else
	 command = "nmap -sV "
      end
   end
   

   command = command .. " --script=vulscan/vulscan.nse --script-args vulscandb=cve.csv" -- <target> -p 80,233
   
   if(isEmptyString(ports)) then
      scan_ports = ""
   else
      scan_ports = "-p " .. ports
   end
   
   scan_command = string.format("%s %s %s", command, host_ip, scan_ports)  

   local begin_epoch = os.time()
   
   local handle = io.popen(scan_command)
   local result = handle:read("*a")
   handle:close()

   local duration = os.time() - begin_epoch
   local scan_ok = true
   local num_open_ports
   local num_vulnerabilities_found
   local cve

   result, num_open_ports, num_vulnerabilities_found, cve = vs_utils.cleanup_nmap_result(result, self.name)

   return result, duration, scan_ok, num_open_ports, num_vulnerabilities_found, cve
end

-- ##############################################

return vs_module

